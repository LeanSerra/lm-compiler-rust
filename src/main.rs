// This will ignore lex.rs file as it is autogenerated by rflex
#[rustfmt::skip]
#[allow(clippy::all)]
mod lex;

// This will ignore grammar.rs file as it is autogenerated by rustemo
#[rustfmt::skip]
#[allow(clippy::all)]
#[allow(warnings)]
mod grammar;
// This will ignore grammar_actions.rs file as it is autogenerated by rustemo
#[rustfmt::skip]
#[allow(clippy::all)]
#[allow(warnings)]
mod grammar_actions;

mod context;
mod grammar_lexer;

use crate::{context::*, grammar::GrammarParser, grammar_lexer::LexerAdapter};
use rustemo::Parser;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    set_source_file_path("./examples/hello_world.lm");
    open_lexer_file()?;
    open_parser_file()?;
    open_symbol_table_file()?;

    let program = GrammarParser::new(LexerAdapter::new())
        .parse(&read_source_to_string()?)
        .map_err(CompilerError::Parser)?;

    dbg!(program);

    Ok(())
}
